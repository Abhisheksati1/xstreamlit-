import { createContext, useState } from "react"
import { Event, hydrateClientStorage, useEventLoop } from "/utils/state.js"

export const initialState = {"color": "#db114b", "data": {"columns": ["col 0", "col 1", "col 2", "col 3", "col 4", "col 5", "col 6", "col 7", "col 8", "col 9"], "data": [[-1.2999372463085508, -1.1319791446651337, 0.10387748404851428, -1.1984895888043923, 0.036388201751906366, -0.49009697148071224, 1.0987493918048055, 1.138921452267354, 0.10042537534157389, 0.11123135617210633], [-0.6867954690434176, -0.3154828895097667, 1.5836930496208868, -1.0205706664176752, 2.0018299948221365, 0.8203371596379184, 1.6172987074035912, 1.1718235547123272, -0.9969392205377058, 0.4348329813299726], [1.3086657231463952, 1.6501979722501154, -1.3945583317781394, -0.4633125633300496, -0.06442300271697933, 0.922615098873711, 1.7127529478505412, 0.7206351830224028, 1.0085123838436376, 1.6427098935601563], [1.2660940848546838, 0.6804544583674146, 0.1758390859683624, -1.519604843799746, -0.36152493567214977, -1.09987464226935, -1.1646114390470947, 2.076318167868693, 0.0015192155894030843, 0.2833698512353112], [-0.6773770254581378, -1.0226851024018098, 0.8129165226400377, 0.19496388533646028, -1.7159979526811107, 0.053998751432409973, 0.27821562933639493, -1.670037272227615, -0.2714943679049043, -0.3352418974918767], [1.0912336204343978, 0.12657477607446263, 2.0318547045972957, 1.2455930086957367, 0.49793181062035113, 0.09341364487502836, -0.7267576513660735, 0.1332641897286985, 0.40481600705269577, -1.2623763358997662], [0.924380549930579, -0.8999874987422511, -2.0589566051278476, 1.6385217161454166, -0.5515523010846185, -0.8790745655010778, 1.0612326223691917, 0.2821031884435046, -1.2502471295080406, -0.16060295748425346], [-0.17701937378477176, 0.13743997249212614, 0.8076597191131846, 0.16879346216744187, 0.7040717604469305, -1.2883175827331244, 1.1295197640303793, 0.732609813627192, 1.0580946507163995, -0.918392106530917], [-0.6661673321854998, -0.053730842671818, 0.0710883877871595, -1.3290960283569295, -0.21891850371729374, -0.5688998012365032, -0.7398564130199637, 1.3243494435214969, 1.8425162338691614, 0.9878102053587551], [-0.02880901150750704, 1.1438765254265173, 1.988467450589576, 0.34938783703976317, 0.2988800131183379, -0.440749671665159, 1.2530370691416624, -0.3023537266537349, -0.41517577788554677, 0.03793684630568033]]}, "data01": [{"x": 100, "y": 200, "z": 200}, {"x": 120, "y": 100, "z": 260}, {"x": 170, "y": 300, "z": 400}, {"x": 170, "y": 250, "z": 280}, {"x": 150, "y": 400, "z": 500}, {"x": 110, "y": 280, "z": 200}], "data2": [{"name": "Page A", "uv": 4000, "pv": 2400, "amt": 2400}, {"name": "Page B", "uv": 3000, "pv": 1398, "amt": 2210}, {"name": "Page C", "uv": 2000, "pv": 9800, "amt": 2290}, {"name": "Page D", "uv": 2780, "pv": 3908, "amt": 2000}, {"name": "Page E", "uv": 1890, "pv": 4800, "amt": 2181}, {"name": "Page F", "uv": 2390, "pv": 3800, "amt": 2500}, {"name": "Page G", "uv": 3490, "pv": 4300, "amt": 2100}], "data_list": [{"x": 1, "y": 1}, {"x": 2, "y": 4}, {"x": 3, "y": 9}, {"x": 4, "y": 16}, {"x": 5, "y": 10}], "eq": " a + ar + a r^2 + a r^3 + \\cdots + a r^{n-1} =\n    \\sum_{k=0}^{n-1} ar^k =\n    a \\left(\\frac{1-r^{n}}{1-r}\\right)", "is_hydrated": false, "router": {"session": {"client_token": "", "client_ip": "", "session_id": ""}, "headers": {"host": "", "origin": "", "upgrade": "", "connection": "", "pragma": "", "cache_control": "", "user_agent": "", "sec_websocket_version": "", "sec_websocket_key": "", "sec_websocket_extensions": "", "accept_encoding": "", "accept_language": ""}, "page": {"host": "", "path": "", "raw_path": "", "full_path": "", "full_raw_path": "", "params": {}}}, "sidebar_displayed": true}

export const ColorModeContext = createContext(null);
export const StateContext = createContext(null);
export const EventLoopContext = createContext(null);
export const clientStorage = {"cookies": {}, "local_storage": {}}

export const initialEvents = () => [
    Event('state.hydrate', hydrateClientStorage(clientStorage)),
]

export const isDevMode = true

export function EventLoopProvider({ children }) {
  const [state, addEvents, connectError] = useEventLoop(
    initialState,
    initialEvents,
    clientStorage,
  )
  return (
    <EventLoopContext.Provider value={[addEvents, connectError]}>
      <StateContext.Provider value={state}>
        {children}
      </StateContext.Provider>
    </EventLoopContext.Provider>
  )
}